# Paket: ESPAltherma – vereinheitlichte Trigger-Templates (MQTT + Attributsensor)
# Leitvorgaben: Packages-only, ASCII-IDs, korrekte device_class/state_class, konsistente Einheiten.
# Hinweis: Bereits bestehende Entitäten bitte einmalig in der UI auf "sensor.altherma_*" umbenennen.
# Parsen: Alle numerischen Werte werden tolerant behandelt (Komma- oder Punkt-Decimals).

template:
  - trigger:
      # 1) JSON vom ESPaltherma (MQTT)
      - platform: mqtt
        topic: "espaltherma/AlthermaSensors"    # ggf. anpassen

      # 2) Fallback/Parallel: bestehender Attribut-Sensor (State-Trigger)
      - platform: state
        entity_id:
          - sensor.althermasensors              # falls vorhanden
          - sensor.none_althermasensors         # Beispiel-Altname

    # Einheitliche Datenquelle "j": bei MQTT = payload_json, sonst = attributes
    variables:
      j: >
        {% if trigger.platform == 'mqtt' %}
          {{ trigger.payload_json }}
        {% else %}
          {{ trigger.to_state.attributes }}
        {% endif %}

    sensor:

      # -------- Modi / Texte --------
      - name: "Altherma Betriebsart"
        unique_id: alth_mode
        state: "{{ j['Aktuelle Betriebsart'] | default('') }}"

      - name: "Altherma Gesamtmodus"
        unique_id: alth_mode_overall
        state: "{{ j['Betriebsart'] | default('') }}"

      - name: "Altherma Betrieb/Störung Text"
        unique_id: alth_op_fault_text
        state: "{{ j['Betrieb / Störung'] | default('') }}"

      - name: "Altherma Störcode"
        unique_id: alth_fault_code
        state_class: measurement
        unit_of_measurement: ""
        state: "{{ (j['Störcode'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Fehlerdetailcode"
        unique_id: alth_fault_detail
        state_class: measurement
        unit_of_measurement: ""
        state: "{{ (j['Fehlerdetailcode'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Adresse Innengerät"
        unique_id: alth_indoor_addr
        state_class: measurement
        unit_of_measurement: ""
        state: "{{ (j['Adresse des Innengeräts'] | default('0') | string | replace(',', '.')) | float(0) }}"

      # -------- Leistungs-/Mengenwerte --------
      - name: "Altherma Max. Außengerätleistung"
        unique_id: alth_ou_max_power_kw
        device_class: power
        unit_of_measurement: "kW"
        state_class: measurement
        state: "{{ (j['Max. Außengerät Leistung (kW)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Durchfluss"
        unique_id: alth_flow_lmin
        unit_of_measurement: "L/min"
        state_class: measurement
        state: "{{ (j['Durchflussmenge (l/min)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Wasserdruck"
        unique_id: alth_water_pressure_bar
        device_class: pressure
        unit_of_measurement: "bar"
        state_class: measurement
        state: "{{ (j['Wasserdruck'] | default('0') | string | replace(',', '.')) | float(0) }}"

      # -------- Setpoints --------
      - name: "Altherma Soll Brauchwasser"
        unique_id: alth_set_dhw_c
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Sollwert Brauchwasser'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Soll VL Hauptzone"
        unique_id: alth_set_flow_main_c
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Sollwert Heizungsvorlauf Hauptzone'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Soll VL Zusatzzone"
        unique_id: alth_set_flow_aux_c
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Sollwert Heizungsvorlauf Zusatzzone'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Soll Raumtemperatur"
        unique_id: alth_set_room_c
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Sollwert Raumtemperatur'] | default('0') | string | replace(',', '.')) | float(0) }}"

      # -------- Temperaturen Wasser (Hydraulik) --------
      - name: "Altherma R9T Eintritt vor PWT"
        unique_id: alth_r9t_in_pwt
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['R9T-Wassereintrittstemp. vor PWT'] | float(0)) }}"

      - name: "Altherma R10T Austritt nach PWT"
        unique_id: alth_r10t_out_pwt
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['R10T-Wasseraustrittstemp. nach PWT'] | float(0)) }}"

      - name: "Altherma R1T Vorlauf nach PWT"
        unique_id: alth_r1t_vl_pwt
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['R1T-Wasser Vorlauftemp. nach dem Plattenwärmetauscher'] | float(0)) }}"

      - name: "Altherma R2T Vorlauf nach Heizstab"
        unique_id: alth_r2t_vl_buh
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['R2T-Wasser Vorlauftemp. nach dem Heizstab'] | float(0)) }}"

      - name: "Altherma R4T Rücklauf vor PWT"
        unique_id: alth_r4t_rl_pwt
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['R4T-Wasser Rücklauftemp. vor dem Plattenwärmetauscher'] | float(0)) }}"

      - name: "Altherma R5T Brauchwasser Speicher"
        unique_id: alth_r5t_dhw
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['R5T-Brauchwassertemperatur im Speicher'] | float(0)) }}"

      # -------- Zusätzliche Temperaturen / Umgebung --------
      - name: "Altherma Außentemperatur R1T"
        unique_id: alth_r1t_outdoor
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['R1T-Außentemperatur'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma O/U Wärmetauscher R4T"
        unique_id: alth_ou_hex_r4t
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['O/U Wärmetauscher Temp.(R4T)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma R2T Verdichtungsendtemp."
        unique_id: alth_r2t_comp_discharge
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['R2T-Verdichtungsendtemperatur'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma R3T Saugrohr"
        unique_id: alth_r3t_suction
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Saugrohrtemp. (R3T)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma R5T Wärmetauscher Mitte"
        unique_id: alth_r5t_hex_mid
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Wärmetauscher Mitteltemp.(R5T)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma R6T Flüssigkeitsleitung"
        unique_id: alth_r6t_liquid_line
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Flüssigkeitsleitungstemp. (R6T)'] | default(j['R3T-Kältemittel Flüssigkeitstemperatur'] | default('0')) | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Hochdruck äquiv. Temp"
        unique_id: alth_hp_temp
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Hochdruck in °C'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Niederdruck äquiv. Temp"
        unique_id: alth_lp_temp
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Niederdruck in °C'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Inverter-Platine"
        unique_id: alth_inv_board_temp
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Inverter Platinentemperatur'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Lüfter 1 Platine"
        unique_id: alth_fan1_board_temp
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Platinentemperatur Lüfter 1'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Lüfter 2 Platine"
        unique_id: alth_fan2_board_temp
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Platinentemperatur Lüfter 2'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Verdichtungsendtemp."
        unique_id: alth_discharge_temp
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Verdichtungsendtemperatur'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma AG Wärmetauschertemp."
        unique_id: alth_ag_hex_temp
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['AG Wärmetauschertemp.'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Flüssigkeitsleitung (2)"
        unique_id: alth_liquid_line_temp2
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Flüssigkeitsleitungstemp.'] | default(j['R3T-Kältemittel Flüssigkeitstemperatur'] | default('0')) | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Verdichtertemperatur"
        unique_id: alth_compressor_temp
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['Verdichtertemperatur'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma IG Luftansaugtemp. R1T"
        unique_id: alth_ig_air_in_r1t
        device_class: temperature
        unit_of_measurement: "°C"
        state_class: measurement
        state: "{{ (j['IG Luftansaugtemperatur (R1T)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      # -------- Drücke / Kompressor / Lüfter --------
      - name: "Altherma Hochdruck"
        unique_id: alth_high_pressure
        device_class: pressure
        unit_of_measurement: "bar"
        state_class: measurement
        state: "{{ (j['Hochdruck'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Niederdruck"
        unique_id: alth_low_pressure
        device_class: pressure
        unit_of_measurement: "bar"
        state_class: measurement
        state: "{{ (j['Niederdruck'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Kältemittel-Drucksensor"
        unique_id: alth_ref_press_sensor
        unit_of_measurement: ""
        state_class: measurement
        state: "{{ (j['Kältemittel-Drucksensor'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Allgemeiner Druck"
        unique_id: alth_pressure_misc
        device_class: pressure
        unit_of_measurement: "bar"
        state_class: measurement
        state: "{{ (j['Druck'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Kompressor Drehzahl"
        unique_id: alth_comp_rps
        device_class: frequency
        unit_of_measurement: "Hz"
        state_class: measurement
        state: "{{ (j['Drehzahl Verdichter (U/Sek)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Ventilator 1 Stufe"
        unique_id: alth_fan1_stage
        state_class: measurement
        unit_of_measurement: ""
        state: "{{ (j['Ventilator 1 (Stufe)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Ventilator 2 Stufe"
        unique_id: alth_fan2_stage
        state_class: measurement
        unit_of_measurement: ""
        state: "{{ (j['Ventilator 2 (Stufe)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Expansionsventil 1"
        unique_id: alth_exv1_pls
        state_class: measurement
        unit_of_measurement: "pls"
        state: "{{ (j['Expansionsventil 1 (pls)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      # -------- Ströme / elektrische Messwerte --------
      - name: "Altherma INV Eingangsstrom (Primär)"
        unique_id: alth_inv_in_current_a
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        state: "{{ (j['INV Platine Eingangsstrom (A) (Primärkreis)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Verdichterstrom (Sekundär)"
        unique_id: alth_comp_current_a
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        state: "{{ (j['Stromaufnahme INV-Verdichter (A) (Sekundärkreis)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma CT L1"
        unique_id: alth_ct_l1
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        state: "{{ (j['CT-Sensormessung (L1)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma CT L2"
        unique_id: alth_ct_l2
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        state: "{{ (j['CT-Sensormessung (L2)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma CT L3"
        unique_id: alth_ct_l3
        device_class: current
        unit_of_measurement: "A"
        state_class: measurement
        state: "{{ (j['CT-Sensormessung (L3)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma COP (BE)"
        unique_id: alth_be_cop
        state_class: measurement
        unit_of_measurement: ""
        state: "{{ (j['BE COP'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma M5 Akku Spannung"
        unique_id: alth_m5_bat_v
        device_class: voltage
        unit_of_measurement: "V"
        state_class: measurement
        state: "{{ (j['M5BatV'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma WiFi RSSI"
        unique_id: alth_wifi_rssi
        device_class: signal_strength
        unit_of_measurement: "dBm"
        state_class: measurement
        state: "{{ (j['WifiRSSI'] | default('0') | string | replace('dBm','') | replace(',', '.')) | float(0) }}"

      - name: "Altherma FreeMem"
        unique_id: alth_freemem
        device_class: data_size
        unit_of_measurement: "B"
        state_class: measurement
        state: "{{ (j['FreeMem'] | default('0') | string | replace(',', '.')) | float(0) }}"

      # -------- Pumpen / Sonstiges --------
      - name: "Altherma Pumpengeschwindigkeit Code"
        unique_id: alth_pump_speed_code
        unit_of_measurement: "%"
        state_class: measurement
        state: "{{ (j['Pumpengeschwindigkeit (0: Max-100: Stop)'] | default('0') | string | replace(',', '.')) | float(0) }}"

      - name: "Altherma Pumpengeschwindigkeit normiert"
        unique_id: alth_pump_speed_percent
        unit_of_measurement: "%"
        state_class: measurement
        # 0 := Max, 100 := Stop  → normiert auf 100 - Code
        state: >-
          {% set raw = (j['Pumpengeschwindigkeit (0: Max-100: Stop)'] | default('0') | string | replace(',', '.')) | float(0) %}
          {{ (100 - raw) | round(0) }}

    binary_sensor:

      # -------- Betriebsflags --------
      - name: "Altherma Thermostat EIN"
        unique_id: alth_thermostat_on
        device_class: heat
        state: "{{ (j['Thermostat EIN/AUS'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Wiederanlaufverzögerung"
        unique_id: alth_restart_delay
        state: "{{ (j['Wiederanlaufverzögerung'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Anlaufregelung aktiv"
        unique_id: alth_start_control
        state: "{{ (j['Anlaufregelung'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Abtauung aktiv"
        unique_id: alth_defrost_active
        device_class: cold
        state: "{{ (j['Abtauung'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Druckausgleich aktiv"
        unique_id: alth_pressure_equalization
        state: "{{ (j['Druckausgleich'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Schallreduzierter Betrieb"
        unique_id: alth_quiet_mode
        state: "{{ (j['Schallreduzierter Betrieb'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Notlauf aktiv"
        unique_id: alth_emergency_active
        device_class: safety
        state: "{{ (j['Aktiver Notlauf'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Ausblasen Inneneinheit 50°C"
        unique_id: alth_blowout_50c
        state: "{{ (j['Ausblasen der Inneneinheit bei 50 ° C'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Monobloc Einstellung"
        unique_id: alth_monobloc
        state: "{{ (j['Monobloc-Einstellung'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma LT Einstellung"
        unique_id: alth_lt_setting
        state: "{{ (j['Altherma LT-Einstellung'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Daten aktiviert"
        unique_id: alth_data_enabled
        state: "{{ (j['Daten Aktivieren/Deaktivieren'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Frostschutz"
        unique_id: alth_frost_protection
        device_class: cold
        state: "{{ (j['Frostschutz'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Frostschutz Wasserleitung"
        unique_id: alth_frost_pipe
        device_class: cold
        state: "{{ (j['Frostschutz für Wasserleitung'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Strömung OK"
        unique_id: alth_flow_ok
        device_class: problem
        # ON = OK → problem == false
        state: "{{ not ((j['Strömungsschalter (ON=OK)'] | default('OFF')) | string | upper == 'ON') }}"

      - name: "Altherma Clixon BUH OK"
        unique_id: alth_clixon_ok
        device_class: problem
        # ON = OK → problem == false
        state: "{{ not ((j['Übertemperaturschutz Clixon BUH (ON=OK)'] | default('OFF')) | string | upper == 'ON') }}"

      - name: "Altherma 2-Wege-Ventil geschlossen"
        unique_id: alth_2way_valve
        state: "{{ (j['2-Wege-Ventil Shut Off Valve'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma 3-Wege-Ventil DHW"
        unique_id: alth_3way_valve_dhw
        device_class: heat
        # ON: DHW / OFF: Raumheizung
        state: "{{ (j['3-Wege-Ventil (ON: DHW/OFF: Raumheizung)'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Heizstab Speicher"
        unique_id: alth_bsh_tank
        device_class: heat
        state: "{{ (j['Heizstab Speicher (BSH)'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Heizstab Stufe 1"
        unique_id: alth_ebu_stage1
        device_class: heat
        state: "{{ (j['Heizstab Stufe 1'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Heizstab Stufe 2"
        unique_id: alth_ebu_stage2
        device_class: heat
        state: "{{ (j['Heizstab Stufe 2'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma DHW Betrieb"
        unique_id: alth_dhw_op
        device_class: heat
        # Attributschreibweise "Brachwasserbetrieb (DHW)" beibehalten
        state: "{{ (j['Brachwasserbetrieb (DHW)'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Speicher Eco-Mode"
        unique_id: alth_tank_eco
        state: "{{ (j['Speicher Eco-Mode'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Speicher Komfort-Mode"
        unique_id: alth_tank_comfort
        state: "{{ (j['Speicher Kompfort-Mode'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Speicher Power-Mode"
        unique_id: alth_tank_power
        state: "{{ (j['Speicher Power-Mode'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Raumheizbetrieb"
        unique_id: alth_space_heating
        device_class: heat
        state: "{{ (j['Raumheizbetrieb'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma System AUS"
        unique_id: alth_system_off
        device_class: power
        state: "{{ (j['System AUS'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma Notbetrieb aktiv"
        unique_id: alth_emergency_mode
        device_class: safety
        state: "{{ (j['Notbetrieb aktiviert/nicht aktiviert'] | default('OFF')) | string | upper == 'ON' }}"

      - name: "Altherma HP Forced FG"
        unique_id: alth_hp_forced_fg
        state: "{{ (j['HP Forced FG'] | default('OFF')) | string | upper == 'ON' }}"

      # -------- Zukunft / Platzhalter (numerisch 0) --------
      - name: "Altherma Mischung 1"
        unique_id: alth_mix1
        state: "{{ (j['[Zukunft] 3-Wege-Ventil Mischung 1'] | default('0')) }}"

      - name: "Altherma Mischung 2"
        unique_id: alth_mix2
        state: "{{ (j['[Zukunft] 3-Wege-Ventil Mischung 2'] | default('0')) }}"
