# /config/packages/40_kosten_2025_haus.yaml
# Allgemeinstrom 2025 – getrennt: Variabel (EPEX) + Nachtrag 1.1.–Go-Live (kWh × Pauschalpreis)
# - Fixkosten bleiben vorhanden, sind hier aber nicht Gegenstand
# - Neu in dieser Version:
#   * input_datetime.haus_allgemeinstrom_golive_2025 – Go-Live Datum
#   * input_number.haus_allgemeinstrom_baseline_kwh_pro_tag_2025 – Pauschal kWh/Tag (Schätzwert)
#   * sensor.haus_allgemeinstrom_nachtrag_tage_2025 – Tage 1.1.–Go-Live
#   * sensor.haus_allgemeinstrom_var_nachtrag_kwh_2025_jan1_golive – kWh Nachtrag (Tage × kWh/Tag)
#   * sensor.haus_allgemeinstrom_var_nachtrag_eur_2025_jan1_golive – € Nachtrag (kWh × Preis)
# - Bestehendes bleibt unverändert: Utility-Meter kWh (hour/day/month/year), EPEX-Preis, Startwert-Nachtrag (optional)

input_number:
  # Jahres-Grundgebühr (weiter vorhanden, für diese Position hier nicht relevant)
  haus_betriebskosten_strom_grundgebuehr_2025:
    name: "Haus – Betriebskosten: Strom Grundgebühr 2025 [€/Jahr]"
    min: 0
    max: 100000
    step: 0.01
    mode: box
    unit_of_measurement: "€"

  # Optional: manueller Jahresverbrauch (hier nicht genutzt)
  haus_betriebskosten_hausstrom_zaehlerstand_kwh_2025:
    name: "Haus – Betriebskosten: Hausstrom Zählerstand 2025 [kWh]"
    min: 0
    max: 10000000
    step: 0.01
    mode: box
    unit_of_measurement: "kWh"

  # Durchschnittspreis 2025 (€/kWh) – Fallback und für Nachtrag 1.1.–Go-Live
  haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh_2025:
    name: "Haus – Kosten: Strom Arbeitspreis [€/kWh]"
    min: 0
    max: 10
    step: 0.0001
    mode: box
    unit_of_measurement: "€/kWh"

  # NEU: Pauschaler Tagesverbrauch (kWh/Tag) für den Nachtrag 1.1.–Go-Live
  haus_allgemeinstrom_baseline_kwh_pro_tag_2025:
    name: "Haus – Kosten: Strom kWh/Tag (Schätzung) 2025"
    min: 0
    max: 1000
    step: 0.01
    mode: box
    unit_of_measurement: "kWh/Tag"

input_datetime:
  # NEU: Go-Live Datum (Start der HA-Erfassung)
  haus_allgemeinstrom_golive_2025:
    name: "Haus – Kosten: Go-Live Datum Strom (2025)"
    has_date: true
    has_time: false

utility_meter:
  # kWh je Periode aus Gesamtzähler (S0 Kanal 1)
  haus_allgemein_energy_hour_kwh:
    source: sensor.zaehler_xiao_c6_s0_kanal_1_energie_gesamt_kwh
    cycle: hourly
  haus_allgemein_energy_day_kwh:
    source: sensor.zaehler_xiao_c6_s0_kanal_1_energie_gesamt_kwh
    cycle: daily
  haus_allgemein_energy_month_kwh:
    source: sensor.zaehler_xiao_c6_s0_kanal_1_energie_gesamt_kwh
    cycle: monthly
  haus_allgemein_energy_year_kwh:
    source: sensor.zaehler_xiao_c6_s0_kanal_1_energie_gesamt_kwh
    cycle: yearly

template:
  - sensor:
      # ===============================
      # VARIABEL – live €/h (EPEX)
      # ===============================
      - name: haus_allgemeinstrom_var_stunde_eur
        unique_id: haus_allgemeinstrom_var_stunde_eur
        unit_of_measurement: "€"
        device_class: monetary
        state_class: measurement
        state: >-
          {% set kwh = states('sensor.haus_allgemein_energy_hour_kwh') | float(0) %}
          {% set rn = states('sensor.epex_spot_data_net_price') %}
          {% set rg = states('sensor.epex_spot_data_price') %}
          {% set chosen = rn if rn not in ['unknown','unavailable','none','None',''] else rg %}
          {% if chosen in ['unknown','unavailable','none','None',''] %}
            {% set chosen = states('input_number.haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh_2025') %}
          {% endif %}
          {{ (kwh * (chosen | float(0))) | round(4) }}
        attributes:
          friendly_name: "Haus – Allgemeinstrom Verbrauchskosten [€/h]"
          kwh_stunde: "{{ states('sensor.haus_allgemein_energy_hour_kwh') | float(0) }}"

      # ============================================
      # NACHTRAG – 1.1.2025 bis Go-Live (pauschal)
      # ============================================
      # NEU: Tage 1.1. → Go-Live (>=0)
      - name: haus_allgemeinstrom_nachtrag_tage_2025
        unique_id: haus_allgemeinstrom_nachtrag_tage_2025
        unit_of_measurement: "d"
        state_class: measurement
        state: >-
          {% set golive = states('input_datetime.haus_allgemeinstrom_golive_2025') %}
          {% set start = as_datetime('2025-01-01') %}
          {% set dgo = as_datetime(golive) if golive not in ['unknown','unavailable','none','None',''] else none %}
          {% set days = ((as_timestamp(dgo) - as_timestamp(start)) / 86400) if dgo else 0 %}
          {{ (days | int(0)) if days > 0 else 0 }}
        attributes:
          friendly_name: "Haus – Allgemeinstrom Nachtrag: Tage 1.1.–Go-Live"

      # NEU: kWh Nachtrag = Tage × kWh/Tag (Schätzung)
      - name: haus_allgemeinstrom_var_nachtrag_kwh_2025_jan1_golive
        unique_id: haus_allgemeinstrom_var_nachtrag_kwh_2025_jan1_golive
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: measurement
        state: >-
          {% set tage = states('sensor.haus_allgemeinstrom_nachtrag_tage_2025') | float(0) %}
          {% set kwh_tag = states('input_number.haus_allgemeinstrom_baseline_kwh_pro_tag_2025') | float(0) %}
          {{ (tage * kwh_tag) | round(2) }}
        attributes:
          friendly_name: "Haus – Allgemeinstrom Nachtrag 1.1.–Go-Live [kWh]"
          tage: "{{ states('sensor.haus_allgemeinstrom_nachtrag_tage_2025') | float(0) }}"
          kwh_pro_tag: "{{ states('input_number.haus_allgemeinstrom_baseline_kwh_pro_tag_2025') | float(0) }}"

      # NEU: € Nachtrag = kWh Nachtrag × Durchschnittspreis
      - name: haus_allgemeinstrom_var_nachtrag_eur_2025_jan1_golive
        unique_id: haus_allgemeinstrom_var_nachtrag_eur_2025_jan1_golive
        unit_of_measurement: "€"
        device_class: monetary
        state_class: measurement
        state: >-
          {% set kwh = states('sensor.haus_allgemeinstrom_var_nachtrag_kwh_2025_jan1_golive') | float(0) %}
          {% set p = states('input_number.haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh_2025') | float(0) %}
          {{ (kwh * p) | round(2) }}
        attributes:
          friendly_name: "Haus – Allgemeinstrom Nachtrag 1.1.–Go-Live [€]"
          nachtrag_kwh: "{{ states('sensor.haus_allgemeinstrom_var_nachtrag_kwh_2025_jan1_golive') | float(0) }}"
          preis_eur_kwh: "{{ states('input_number.haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh_2025') | float(0) }}"

      # (Bestehender Startwert-Nachtrag bleibt – optional nutzbar)
      - name: haus_allgemeinstrom_var_nachtrag_kwh_2025
        unique_id: haus_allgemeinstrom_var_nachtrag_kwh_2025
        unit_of_measurement: "kWh"
        device_class: energy
        state_class: measurement
        state: >-
          {% set gesamt = states('sensor.zaehler_xiao_c6_s0_kanal_1_energie_gesamt_kwh') | float(0) %}
          {% set start = states('number.zaehler_haus_allgemein_haus_zahler_startwert_kanal_1_kwh') | float(0) %}
          {% set year  = states('sensor.haus_allgemein_energy_year_kwh') | float(0) %}
          {% set diff  = (gesamt - start - year) %}
          {{ (diff if diff > 0 else 0) | round(3) }}
        attributes:
          friendly_name: "Haus – Allgemeinstrom Nachtrag (Startwert-Methode) [kWh]"

      - name: haus_allgemeinstrom_var_nachtrag_eur_2025
        unique_id: haus_allgemeinstrom_var_nachtrag_eur_2025
        unit_of_measurement: "€"
        device_class: monetary
        state_class: measurement
        state: >-
          {% set kwh = states('sensor.haus_allgemeinstrom_var_nachtrag_kwh_2025') | float(0) %}
          {% set p   = states('input_number.haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh_2025') | float(0) %}
          {{ (kwh * p) | round(2) }}
        attributes:
          friendly_name: "Haus – Allgemeinstrom Nachtrag (Startwert-Methode) [€]"

  # Trigger-Template: aktualisiere 'Tage' automatisch um Mitternacht
  - trigger:
      - platform: time
        at: "00:00:00"
    sensor:
      - name: haus_allgemeinstrom_nachtrag_tage_2025_autorefresh
        unique_id: haus_allgemeinstrom_nachtrag_tage_2025_autorefresh
        state: "{{ states('sensor.haus_allgemeinstrom_nachtrag_tage_2025') }}"
