################################################################################
# /config/packages/40_kosten_haus.yaml
# Stromkosten Haus: Allgemeinstrom + Wärmepumpe (A3 + EPEX, KEIN Nachtrag-Block)
# Stand: 06.10.2025
################################################################################

# ──────────────────────────────────────────────────────────────────────────────
# 1) INPUTS – Preise & A3 (Vor-Montage)
# ──────────────────────────────────────────────────────────────────────────────
input_number:
  # Fallback-Preise, falls EPEX ausfällt
  haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh:
    name: "Hausstrom Ø-Preis (neutral, €/kWh)"
    min: 0
    max: 10
    step: 0.0001
    unit_of_measurement: "€/kWh"
    mode: box
  haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh_2025:
    name: "Hausstrom Ø-Preis 2025 (€/kWh)"
    min: 0
    max: 10
    step: 0.0001
    unit_of_measurement: "€/kWh"
    mode: box

  # A3 – Allgemeinstrom (Vor-Montage)
  haus_allgemeinstrom_vormontage_kwh:
    name: "Allgemeinstrom vor Montage (kWh)"
    min: 0
    max: 999999
    step: 0.001
    unit_of_measurement: "kWh"
    mode: box
  haus_allgemeinstrom_vormontage_preis_eur_kwh:
    name: "Allgemeinstrom Ø-Preis vor Montage (€/kWh)"
    min: 0
    max: 5
    step: 0.0001
    unit_of_measurement: "€/kWh"
    mode: box

  # A3 – Wärmepumpe (Vor-Montage, optional)
  wp_vormontage_kwh:
    name: "WP vor Montage (kWh)"
    min: 0
    max: 999999
    step: 0.001
    unit_of_measurement: "kWh"
    mode: box
  wp_vormontage_preis_eur_kwh:
    name: "WP Ø-Preis vor Montage (€/kWh)"
    min: 0
    max: 5
    step: 0.0001
    unit_of_measurement: "€/kWh"
    mode: box

# ──────────────────────────────────────────────────────────────────────────────
# 2) UTILITY_METER – kWh (ALLG+WP) und €-Perioden (aus Total-€)
#    → EIN Block, keine Dubletten!
# ──────────────────────────────────────────────────────────────────────────────
utility_meter:
  # kWh – Allgemeinstrom (Quelle: Gesamtzähler)
  haus_allgemein_energy_hour_kwh:
    source: sensor.zaehler_xiao_c6_s0_kanal_1_energie_gesamt_kwh
    cycle: hourly
  haus_allgemein_energy_day_kwh:
    source: sensor.zaehler_xiao_c6_s0_kanal_1_energie_gesamt_kwh
    cycle: daily
  haus_allgemein_energy_month_kwh:
    source: sensor.zaehler_xiao_c6_s0_kanal_1_energie_gesamt_kwh
    cycle: monthly
  haus_allgemein_energy_year_kwh:
    source: sensor.zaehler_xiao_c6_s0_kanal_1_energie_gesamt_kwh
    cycle: yearly

  # kWh – Wärmepumpe (Quelle: Gesamtzähler)
  wp_energy_hour_kwh:
    source: sensor.zaehler_xiao_c6_wp_zahlerstand_gesamt_kwh
    cycle: hourly
  wp_energy_day_kwh:
    source: sensor.zaehler_xiao_c6_wp_zahlerstand_gesamt_kwh
    cycle: daily
  wp_energy_month_kwh:
    source: sensor.zaehler_xiao_c6_wp_zahlerstand_gesamt_kwh
    cycle: monthly
  wp_energy_year_kwh:
    source: sensor.zaehler_xiao_c6_wp_zahlerstand_gesamt_kwh
    cycle: yearly

  # €-Perioden – Allgemeinstrom (Quelle: Total-€ Sensor unten)
  haus_allgemeinstrom_kosten_day_eur:
    source: sensor.haus_allgemeinstrom_kosten_total_eur
    cycle: daily
  haus_allgemeinstrom_kosten_week_eur:
    source: sensor.haus_allgemeinstrom_kosten_total_eur
    cycle: weekly
  haus_allgemeinstrom_kosten_month_eur:
    source: sensor.haus_allgemeinstrom_kosten_total_eur
    cycle: monthly
  haus_allgemeinstrom_kosten_year_eur:
    source: sensor.haus_allgemeinstrom_kosten_total_eur
    cycle: yearly

  # €-Perioden – Wärmepumpe (Quelle: Total-€ Sensor unten)
  wp_kosten_day_eur:
    source: sensor.wp_kosten_total_eur
    cycle: daily
  wp_kosten_week_eur:
    source: sensor.wp_kosten_total_eur
    cycle: weekly
  wp_kosten_month_eur:
    source: sensor.wp_kosten_total_eur
    cycle: monthly
  wp_kosten_year_eur:
    source: sensor.wp_kosten_total_eur
    cycle: yearly

# ──────────────────────────────────────────────────────────────────────────────
# 3) TEMPLATE – €/h (EPEX Fallback) + A3-Kosten + Total-€ + Jahr inkl. A3
# ──────────────────────────────────────────────────────────────────────────────
template:
  - sensor:
      # €/h – Allgemeinstrom (monetary, KEINE state_class)
      - name: haus_allgemeinstrom_var_stunde_eur
        unique_id: haus_allgemeinstrom_var_stunde_eur
        unit_of_measurement: "€"
        device_class: monetary
        state: >-
          {% set INV = ['unknown','unavailable','','None','none'] %}
          {% set kwh = states('sensor.haus_allgemein_energy_hour_kwh')|float(0) %}
          {% set epex_net = states('sensor.epex_spot_data_net_price') %}
          {% set epex_brut = states('sensor.epex_spot_data_price') %}
          {% set jahr = (states('input_number.abrechnungsjahr')|int if states('input_number.abrechnungsjahr') not in INV else now().year) %}
          {% set p_jahr_id = 'input_number.haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh_' ~ jahr %}
          {% set p_jahr = states(p_jahr_id) %}
          {% set p_neutral = states('input_number.haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh') %}
          {% set price = (epex_net if epex_net not in INV
                          else (epex_brut if epex_brut not in INV
                                else (p_jahr if p_jahr not in INV else p_neutral)))|float(0) %}
          {{ (kwh * price) | round(4) }}

      # €/h – Wärmepumpe (monetary, KEINE state_class)
      - name: wp_var_stunde_eur
        unique_id: wp_var_stunde_eur
        unit_of_measurement: "€"
        device_class: monetary
        state: >-
          {% set INV = ['unknown','unavailable','','None','none'] %}
          {% set kwh = states('sensor.wp_energy_hour_kwh')|float(0) %}
          {% set epex_net = states('sensor.epex_spot_data_net_price') %}
          {% set epex_brut = states('sensor.epex_spot_data_price') %}
          {% set jahr = (states('input_number.abrechnungsjahr')|int if states('input_number.abrechnungsjahr') not in INV else now().year) %}
          {% set p_jahr_id = 'input_number.haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh_' ~ jahr %}
          {% set p_jahr = states(p_jahr_id) %}
          {% set p_neutral = states('input_number.haus_betriebskosten_hausstrom_durchschnittspreis_eur_kwh') %}
          {% set price = (epex_net if epex_net not in INV
                          else (epex_brut if epex_brut not in INV
                                else (p_jahr if p_jahr not in INV else p_neutral)))|float(0) %}
          {{ (kwh * price) | round(4) }}

      # A3 – Allgemeinstrom € (fix aus Inputs)
      - name: haus_allgemeinstrom_vormontage_kosten_eur
        unique_id: haus_allgemeinstrom_vormontage_kosten_eur
        unit_of_measurement: "€"
        device_class: monetary
        state: >-
          {{ (states('input_number.haus_allgemeinstrom_vormontage_kwh')|float(0)
             * states('input_number.haus_allgemeinstrom_vormontage_preis_eur_kwh')|float(0)) | round(2) }}

      # A3 – Wärmepumpe € (fix aus Inputs)
      - name: wp_vormontage_kosten_eur
        unique_id: wp_vormontage_kosten_eur
        unit_of_measurement: "€"
        device_class: monetary
        state: >-
          {{ (states('input_number.wp_vormontage_kwh')|float(0)
             * states('input_number.wp_vormontage_preis_eur_kwh')|float(0)) | round(2) }}

  - trigger:
      # Total-€ addiert NUR positive Deltas der €/h-Sensoren
      - platform: state
        entity_id:
          - sensor.haus_allgemeinstrom_var_stunde_eur
          - sensor.wp_var_stunde_eur
    sensor:
      - name: haus_allgemeinstrom_kosten_total_eur
        unique_id: haus_allgemeinstrom_kosten_total_eur
        unit_of_measurement: "€"
        device_class: monetary
        state_class: total
        state: >-
          {% if trigger.entity_id.endswith('haus_allgemeinstrom_var_stunde_eur') %}
            {% set prev = trigger.from_state.state|float(0) if trigger.from_state else 0 %}
            {% set curr = trigger.to_state.state|float(0) if trigger.to_state else 0 %}
            {% set delta = curr - prev %}
            {{ (this.state|float(0) + (delta if delta > 0 else 0)) | round(4) }}
          {% else %}
            {{ this.state|float(0) }}
          {% endif %}

      - name: wp_kosten_total_eur
        unique_id: wp_kosten_total_eur
        unit_of_measurement: "€"
        device_class: monetary
        state_class: total
        state: >-
          {% if trigger.entity_id.endswith('wp_var_stunde_eur') %}
            {% set prev = trigger.from_state.state|float(0) if trigger.from_state else 0 %}
            {% set curr = trigger.to_state.state|float(0) if trigger.to_state else 0 %}
            {% set delta = curr - prev %}
            {{ (this.state|float(0) + (delta if delta > 0 else 0)) | round(4) }}
          {% else %}
            {{ this.state|float(0) }}
          {% endif %}

  - sensor:
      # Jahres-Endwerte inkl. A3 (für Abrechnung/Export)
      - name: haus_allgemeinstrom_kosten_jahr_inkl_vormontage_eur
        unique_id: haus_allgemeinstrom_kosten_jahr_inkl_vormontage_eur
        unit_of_measurement: "€"
        device_class: monetary
        state: >-
          {{ (states('sensor.haus_allgemeinstrom_kosten_year_eur')|float(0)
             + states('sensor.haus_allgemeinstrom_vormontage_kosten_eur')|float(0)) | round(2) }}

      - name: wp_kosten_jahr_inkl_vormontage_eur
        unique_id: wp_kosten_jahr_inkl_vormontage_eur
        unit_of_measurement: "€"
        device_class: monetary
        state: >-
          {{ (states('sensor.wp_kosten_year_eur')|float(0)
             + states('sensor.wp_vormontage_kosten_eur')|float(0)) | round(2) }}
